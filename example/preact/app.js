/* Generated by the Nim Compiler v1.6.10 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI620757020 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI620757023 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NNI620757023 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI620757020, name: "Field1", sons: null}]};
NTI620757023.node = NNI620757023;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_704643234 = [0];
import { h, render } from 'https://cdn.jsdelivr.net/npm/preact@10.11.3/+esm';
import htm from 'https://cdn.jsdelivr.net/npm/htm@3.1.1/+esm'
import { useState, useEffect, useMemo } from 'https://cdn.jsdelivr.net/npm/preact@10.11.3/hooks/+esm';
import {Router, Link} from 'https://cdn.jsdelivr.net/npm/preact-router@4.1.0/+esm';
import { signal, Signal } from 'https://cdn.jsdelivr.net/npm/@preact/signals@1.1.3/+esm';

const html = htm.bind(h);

// https://gist.github.com/developit/af2a4488de152a84bff83e035bb8afc1
Signal.prototype.map = function(fn) { return html`<For each=${this} children=${fn} />` };

export function For({ each, children: f }) {
  let c = useMemo(() => new Map, []);
  let value = each.value;
  if (!Array.isArray(value)) return html`<Item v=${value} f=${f} />`;
  return value.map((v, k, x) => c.get(v) || (c.set(v, x = html`<Item v=${v} k=${k} f=${f} />`), x));
}
let Item = ({ v, k, f }) => f(v, k);

export function Show({ when, fallback, children: f }) {
  let v = when.value;
  return v ? typeof f === 'function' ? html`<Item v=${v} f=${f} />` : f : fallback;
}

function renderApp(component, dom){
  render(html`<${component} />`, dom)
}

var msg = signal("message");

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function useState_620757040(arg_620757041) {
  var result_620757042 = {Field0: 0, Field1: null};

  BeforeRet: do {
    var state_620757043 = useState(arg_620757041);
    var value_620757048 = (state_620757043[0]);
    var setter_620757053 = (state_620757043[1]);
    var colontmp__989855770 = value_620757048;
    var colontmp__989855771 = setter_620757053;
    result_620757042 = nimCopy(result_620757042, {Field0: colontmp__989855770, Field1: colontmp__989855771}, NTI620757023);
    break BeforeRet;
  } while (false);

  return result_620757042;

}

function Parent(props_989855759) {
    
function setMsgFunc(e_989855766) {
        msg.value = e_989855766.target.value;

      
    }
    
function HEX3Aanonymous_989855767() {
        setMsgLen_989855764(((msgValue) == null ? 0 : (msgValue).length));

      
    }

  var result_989855760 = null;

  BeforeRet: do {
    var props = props_989855759;
    var msgValue = msg.value;
    var colontmp__989855769 = useState_620757040(0);
    var msgLen = colontmp__989855769["Field0"];
    var setMsgLen_989855764 = colontmp__989855769["Field1"];
    useEffect(HEX3Aanonymous_989855767);
    result_989855760 = eval('html`' + "    <div>\n      <h1>Hello ${props.name}!</h1>\n      <form>\n        <input type=\"text\" oninput=${setMsgFunc} value=${msg} />\n        <${Show} when=${msg} fallback=${html`<p>fill message</p>`}>\n          ${html`<p>message filled</p>`}\n        <//>\n        <p>this is a ${msg}</p>\n        <p>message count is ${msgLen}</p>\n      </form>\n    </div>\n  " + '`');
    break BeforeRet;
  } while (false);

  return result_989855760;

}

function Home() {
  var result_973078532 = null;

  BeforeRet: do {
    result_973078532 = eval('html`' + "    <div>\n      <h1>Home</h1>\n      <${Link} href=\"/about\">about<//>\n      <hr/>\n      <${Parent} name=\"preact\" />\n    </div>\n  " + '`');
    break BeforeRet;
  } while (false);

  return result_973078532;

}

function About() {
  var result_1006632963 = null;

  BeforeRet: do {
    result_1006632963 = eval('html`' + "    <div>\n      <h1>About</h1>\n      <${Link} href=\"/\">home<//>\n    </div>\n  " + '`');
    break BeforeRet;
  } while (false);

  return result_1006632963;

}

function App() {
  var result_469762054 = null;

  BeforeRet: do {
    result_469762054 = eval('html`' + "    <${Router}>\n      <${Home} path=\"/\" />\n      <${About} path=\"/about\" />\n    <//>\n  " + '`');
    break BeforeRet;
  } while (false);

  return result_469762054;

}
renderApp(App, document.getElementById("app"));
