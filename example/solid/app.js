/* Generated by the Nim Compiler v1.6.10 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI939524134 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI939524132 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI939524137 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI939524102 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI939524100 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI939524105 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NNI939524105 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI939524100, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI939524102, name: "Field1", sons: null}]};
NTI939524105.node = NNI939524105;
var NNI939524137 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI939524132, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI939524134, name: "Field1", sons: null}]};
NTI939524137.node = NNI939524137;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555130.base = NTI33555113;
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    throw e_33556667;

  
}

function chckRange(i_33557189, a_33557190, b_33557191) {
      var Temporary1;

  var result_33557192 = 0;

  BeforeRet: do {
      if (!(a_33557190 <= i_33557189)) Temporary1 = false; else {        Temporary1 = (i_33557189 <= b_33557191);      }    if (Temporary1) {
    result_33557192 = i_33557189;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557192;

}

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function addInt(a_33556940, b_33556941) {
        var result = a_33556940 + b_33556941;
    checkOverflowInt(result);
    return result;
  

  
}

function chckIndx(i_33557184, a_33557185, b_33557186) {
      var Temporary1;

  var result_33557187 = 0;

  BeforeRet: do {
      if (!(a_33557185 <= i_33557184)) Temporary1 = false; else {        Temporary1 = (i_33557184 <= b_33557186);      }    if (Temporary1) {
    result_33557187 = i_33557184;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557184, a_33557185, b_33557186);
    }
    
  } while (false);

  return result_33557187;

}
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_687866018 = [0];
import { render } from "https://cdn.skypack.dev/solid-js/web";
import html from "https://cdn.skypack.dev/solid-js/html";
import {
  createSignal,
  createEffect,
  onCleanup,
  For,
  Show,
} from "https://cdn.skypack.dev/solid-js";
// https://github.com/solidjs/solid-router
// https://www.jsdelivr.com/package/npm/@solidjs/router
import { Router, Routes, Route, A } from "https://cdn.jsdelivr.net/npm/@solidjs/router@0.6/+esm";
// import { Router, Routes, Route, Link } from "https://cdn.jsdelivr.net/npm/solid-app-router@0.1.14/+esm";

function renderApp(component, dom){
  render(()=>component, dom)
}


function Page1() {
    return html`    <h2>page1</h2>
  `

  
}

function Page2() {
    return html`    <h2>page2</h2>
  `

  
}

function Page3() {
    return html`    <h2>page3</h2>
  `

  
}

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function createSignal_939524108(arg_939524109) {
  var result_939524110 = {Field0: null, Field1: null};

  BeforeRet: do {
    var state_939524111 = createSignal(arg_939524109);
    var value_939524116 = (state_939524111[0]);
    var setter_939524121 = (state_939524111[1]);
    var colontmp__956301354 = value_939524116;
    var colontmp__956301355 = setter_939524121;
    result_939524110 = nimCopy(result_939524110, {Field0: colontmp__956301354, Field1: colontmp__956301355}, NTI939524105);
    break BeforeRet;
  } while (false);

  return result_939524110;

}

function createSignal_939524158(arg_939524159) {
  var result_939524160 = {Field0: null, Field1: null};

  BeforeRet: do {
    var state_939524161 = createSignal(arg_939524159);
    var value_939524166 = (state_939524161[0]);
    var setter_939524171 = (state_939524161[1]);
    var colontmp__956301357 = value_939524166;
    var colontmp__956301358 = setter_939524171;
    result_939524160 = nimCopy(result_939524160, {Field0: colontmp__956301357, Field1: colontmp__956301358}, NTI939524137);
    break BeforeRet;
  } while (false);

  return result_939524160;

}

function Parent(props_956301321) {
    
function propsName() {
      var result_956301323 = null;

        result_956301323 = (props_956301321.name);

      return result_956301323;

    }
    
function setMsgFunc(e_956301346) {
        setMsg_956301342(e_956301346.target.value);

      
    }
    
function HEX3Aanonymous_956301347() {
        var Temporary1;

        setMsgLen_956301344((((Temporary1 = msg(), Temporary1)) == null ? 0 : (Temporary1).length));

      
    }

    var colontmp__956301353 = createSignal_939524108("message");
    var msg = colontmp__956301353["Field0"];
    var setMsg_956301342 = colontmp__956301353["Field1"];
    var colontmp__956301356 = createSignal_939524158(0);
    var msgLen = colontmp__956301356["Field0"];
    var setMsgLen_956301344 = colontmp__956301356["Field1"];
    createEffect(HEX3Aanonymous_956301347);
    console.log("=== re-render");
    return html`    <h1>Hello ${()=>propsName}!</h1>
    <form>
      <input type="text" oninput=${setMsgFunc} value=${msg} />
      <${Show} when=${()=> msgLen() === 0} fallback=${html`<p>message filled</p>`} >
        <p>fill message</p>
      <//>
      <p>this is a ${msg}</p>
      <p>message count is ${msgLen}</p>
    </form>
    <a href="/page1">page1<//>
    <a href="/page2">page2<//>
    <a href="/page3">page3<//>
    <${Routes}>
      <${Route} path="/page1" element=${html`<${Page1} />`} />
      <${Route} path="/page2" element=${html`<${Page2} />`} />
      <${Route} path="/page3" element=${html`<${Page3} />`} />
    <//>
  `

  
}

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }
  return result_33556828;

}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556938) {
        if (a_33556938 > 2147483647 || a_33556938 < -2147483648) raiseOverflow();
  

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_1040187480 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1040187480 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_1040187480;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            i_1040187480 = addInt(i_1040187480, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function raiseIndexError(i_33556754, a_33556755, b_33556756) {
    var Temporary1;

    if ((b_33556756 < a_33556755)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_335544323(i_33556754) || [],makeNimstrLit(" not in ") || [],HEX24_335544323(a_33556755) || [],makeNimstrLit(" .. ") || [],HEX24_335544323(b_33556756) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function map_1040187407(s_1040187410, op_1040187412) {
  var result_1040187413 = [];

    result_1040187413 = new Array(chckRange((s_1040187410).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_1040187410).length, 0, 2147483647) ; ++i) { result_1040187413[i] = null; }    Label1: do {
      var i_1040187428 = 0;
      var colontmp__1040187471 = 0;
      colontmp__1040187471 = (s_1040187410).length;
      var i_1040187472 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_1040187472 < colontmp__1040187471)) break Label3;
            i_1040187428 = i_1040187472;
            result_1040187413[chckIndx(i_1040187428, 0, (result_1040187413).length - 1)] = op_1040187412(s_1040187410[chckIndx(i_1040187428, 0, (s_1040187410).length - 1)]);
            i_1040187472 = addInt(i_1040187472, 1);
          }
      } while (false);
    } while (false);

  return result_1040187413;

}

function Loop() {
    
function HEX3Aanonymous_1040187403(row_1040187404) {
      var result_1040187405 = null;

      BeforeRet: do {
        result_1040187405 = toJSStr(row_1040187404);
        break BeforeRet;
      } while (false);

      return result_1040187405;

    }

    var values_1040187402 = [makeNimstrLit("a"), makeNimstrLit("b"), makeNimstrLit("c"), makeNimstrLit("d"), makeNimstrLit("e")];
    var cvalues = map_1040187407(values_1040187402, HEX3Aanonymous_1040187403);
    return html`    <hr>
    <p>loop</p>
    <ul>
      <${For} each=${()=>cvalues}>
        ${value => html`<li>${value}</li>` }
      <//>
    </ul>
  `

  
}

function App() {
    return html`    <${Router}>
      <${Parent} name="Solid" />
      <${Loop} />
    <//>
  `

  
}
renderApp(App, document.getElementById("app"));
