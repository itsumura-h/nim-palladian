/* Generated by the Nim Compiler v1.6.10 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_671088802 = [0];
import { html, render } from 'https://unpkg.com/htm/preact/index.mjs?module';
import { useState, useEffect, useMemo } from 'https://unpkg.com/preact@latest/hooks/dist/hooks.module.js?module';
import {Router, Link} from 'https://cdn.jsdelivr.net/npm/preact-router@4.1.0/+esm';

import { Signal } from 'https://cdn.jsdelivr.net/npm/@preact/signals@1.1.3/+esm';

function renderApp(component, dom){
  render(html`<${component} />`, dom)
}


function Func1() {
  var result_469762054 = null;

  BeforeRet: do {
    result_469762054 = eval('html`' + "    <p>func1</p>\n  " + '`');
    break BeforeRet;
  } while (false);

  return result_469762054;

}

function Func2() {
  var result_469762056 = null;

  BeforeRet: do {
    result_469762056 = eval('html`' + "    <p>func2</p>\n  " + '`');
    break BeforeRet;
  } while (false);

  return result_469762056;

}

function App() {
  var result_469762058 = null;

  BeforeRet: do {
    result_469762058 = eval('html`' + "    <${Func1} />\n    <${Func2} />\n    <p>${2+3}</p>\n  " + '`');
    break BeforeRet;
  } while (false);

  return result_469762058;

}
renderApp(App, document.getElementById("app"));
